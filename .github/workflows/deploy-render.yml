name: CI & Deploy to Render

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      # Se você ainda quer rodar checks Django no host (sem docker):
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Django check (prod-like)
        env:
          # valores “seguros” só para rodar o check
          SECRET_KEY: "ci-not-a-real-secret"
          DEBUG: "False"
          DJANGO_ALLOWED_HOSTS: "localhost"
        run: |
          python manage.py check --deploy --fail-level WARNING
          # opcional: valida migrações
          python manage.py makemigrations --check --dry-run

      # (Opcional, mas recomendado) Valida o Dockerfile constrói
      - name: Docker build (validation)
        run: |
          docker build -t app-ci:latest .

      # Se tiver testes Django:
      # - name: Run tests
      #   env:
      #     SECRET_KEY: "ci-not-a-real-secret"
      #     DEBUG: "False"
      #     DJANGO_ALLOWED_HOSTS: "localhost"
      #   run: python manage.py test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Render deploy via Deploy Hook
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          if [ -z "$RENDER_DEPLOY_HOOK_URL" ]; then
            echo "Missing RENDER_DEPLOY_HOOK_URL secret"; exit 1;
          fi
          curl -fsS -X POST "$RENDER_DEPLOY_HOOK_URL"
